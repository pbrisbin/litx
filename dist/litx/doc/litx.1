.\" Automatically generated by Pandoc 2.14.0.3
.\"
.TH "LITX" "1" "November 2022" "User Manual" ""
.hy
.SH NAME
.PP
litx - execute Literate Markdown programs
.SH SYNOPSIS
.PP
\f[I]litx\f[R] [options]
.SH OPTIONS
.PP
\f[B]-i\f[R], \f[B]--input\f[R] \f[I]<PATH|->\f[R]
.PD 0
.P
.PD
.RS
.PP
Read Markdown from \f[I]PATH\f[R] (default: \f[I]-\f[R])
.RE
.PP
\f[B]-o\f[R], \f[B]--output\f[R] \f[I]<PATH|->\f[R]
.PD 0
.P
.PD
.RS
.PP
Output script to \f[I]PATH\f[R], \f[B]instead of\f[R] execution.
.RE
.PP
\f[B]-s\f[R], \f[B]--save\f[R] \f[I]<PATH>\f[R]
.PD 0
.P
.PD
.RS
.PP
Save script to \f[I]PATH\f[R], \f[B]in addition to\f[R] execution.
.RE
.SS Language Presets
.PP
\f[B]-l\f[R], \f[B]--language\f[R] \f[I]<LANGUAGE>\f[R]
.PD 0
.P
.PD
.RS
.PP
Process \f[I]LANGUAGE\f[R] code blocks from Markdown.
The default will be the most frequent (supported) language present, or
\f[I]bash\f[R] if there are none.
This case will produce and execute an empty script, so the final default
doesn\[cq]t matter.
.RE
.PP
\f[B]--bash\f[R]
.PD 0
.P
.PD
.RS
.PP
Equivalent to \f[B]--language=bash\f[R], which is equivalent to:
.PP
\f[I]--shebang=\[dq]/usr/bin/env bash\[dq]\f[R]
.PD 0
.P
.PD
\f[I]--preamble=\[dq]set -euo pipefail\[dq]\f[R]
.PD 0
.P
.PD
\f[I]--exec=\[dq]bash\[dq]\f[R]
.PD 0
.P
.PD
\f[I]--arg=\[dq]-s\[dq]\f[R]
.PD 0
.P
.PD
\f[I]--arg=\[dq]-\[dq]\f[R]
.RE
.SS Execution Options
.PP
\f[B]--shebang\f[R] \f[I]<TEXT>\f[R]
.PD 0
.P
.PD
.RS
.PP
Set the shebang, without the leading \f[I]#!\f[R].
.RE
.PP
\f[B]--no-banner\f[R]
.PD 0
.P
.PD
.RS
.PP
Disable the default banner.
.RE
.PP
\f[B]--banner\f[R] \f[I]<TEXT>\f[R]
.PD 0
.P
.PD
.RS
.PP
Set the banner included in the top of the script.
Default is a commented block such as,
.IP
.nf
\f[C]
#
# Generated by litx-vX.X.X.X
#
\f[R]
.fi
.RE
.PP
\f[B]--no-preamble\f[R]
.PD 0
.P
.PD
.RS
.PP
Disable any default preamble.
.RE
.PP
\f[B]--preamble\f[R] \f[I]<TEXT>\f[R]
.PD 0
.P
.PD
.RS
.PP
Set the preamble.
Default is language specific.
.RE
.PP
\f[B]--exec\f[R] \f[I]<COMMAND>\f[R]
.PD 0
.P
.PD
.RS
.PP
Set the command to use to execute the script.
Default is language-specific.
Passing this option will clear any arguments.
For example,
.IP
.nf
\f[C]
--bash
\f[R]
.fi
.PP
will invoke
.IP
.nf
\f[C]
bash -s -
\f[R]
.fi
.PP
but
.IP
.nf
\f[C]
--bash --exec my-bash
\f[R]
.fi
.PP
will only invoke
.IP
.nf
\f[C]
my-bash
\f[R]
.fi
.PP
You will need to pass
.IP
.nf
\f[C]
--exec my-bash --arg -s --arg -
\f[R]
.fi
.PP
to achieve what (probably) you want.
.RE
.PP
\f[B]--arg\f[R] \f[I]<ARG>\f[R]
.PD 0
.P
.PD
.RS
.PP
Pass an additional argument during execution.
Can be specified many times.
.PP
This will append to any language-specific arguments.
To avoid this, you can re-specify the default \f[I]--exec\f[R] first.
.RE
.PP
\f[B]--no-env\f[R]
.PD 0
.P
.PD
.RS
.PP
Don\[cq]t inherit the current process\[cq]s environment in the executed
process.
.RE
.SS Document Pragmas
.SH ENVIRONMENT
.PP
\f[B]LOG_LEVEL\f[R]=\f[I]error|warn|info|debug|trace\f[R]
.PD 0
.P
.PD
.RS
.PP
Default is \f[I]info\f[R].
.RE
.PP
\f[B]LOG_FORMAT\f[R]=\f[I]tty|json\f[R]
.PD 0
.P
.PD
.RS
.PP
Default is \f[I]tty\f[R].
.RE
.PP
\f[B]LOG_COLOR\f[R]=\f[I]always|never|auto\f[R]
.PD 0
.P
.PD
.RS
.PP
Default is \f[I]auto\f[R].
.RE
.PP
\f[B]LOG_DESTINATION\f[R]=\f[I]stdout|stderr|\[at]<path>\f[R]
.PD 0
.P
.PD
.RS
.PP
Default is \f[I]stdout\f[R].
.RE
.SH AUTHOR
.PP
Patrick Brisbin <pbrisbin@gmail.com>
